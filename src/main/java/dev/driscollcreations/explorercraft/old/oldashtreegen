/*List<FoliagePlacer.Foliage> list = Lists.newArrayList();
        BlockPos blockpos = blockPos.below();
        setDirtAt(reader, blockpos);
        setDirtAt(reader, blockpos.east());
        setDirtAt(reader, blockpos.south());
        setDirtAt(reader, blockpos.south().east());
        int k = blockPos.getX();
        int l = blockPos.getY();
        int i1 = blockPos.getZ();
        int l1 = l + freeHeight - 1;

        for(int i2 = 0; i2 < freeHeight; ++i2) {
            int j2 = l + i2;
            BlockPos blockpos1 = new BlockPos(k, j2, i1);
            if (TreeFeature.isAirOrLeaves(reader, blockpos1)) {
                placeLog(reader, random, blockpos1, blockPosSet, boundingBox, featureConfig);
                placeLog(reader, random, blockpos1.east(), blockPosSet, boundingBox, featureConfig);
                placeLog(reader, random, blockpos1.south(), blockPosSet, boundingBox, featureConfig);
                placeLog(reader, random, blockpos1.east().south(), blockPosSet, boundingBox, featureConfig);
            }

        }

        //list.add(new FoliagePlacer.Foliage(new BlockPos(j1, l1, k1), 0, true));
        for(int l2 = -1; l2 <= 2; ++l2) {
            for(int i3 = -1; i3 <= 2; ++i3) {
                if ((l2 < 0 || l2 > 1 || i3 < 0 || i3 > 1)) {
                    if ((l2 != -1 && i3 != -1) || (l2 != 2 && i3 != 2) ) {
                        if ((i3 != -1 && l2 != 2) || (i3 != 2 && l2 != -1)) {
                            int j3 = random.nextInt(4) + 2;
                            for(int k2 = 0; k2 < j3; ++k2) {
                                placeLog(reader, random, new BlockPos(k + l2, l + k2, i1 + i3), blockPosSet, boundingBox, featureConfig);
                            }

                            int j4 = random.nextInt(2) + random.nextInt(2) + 1;
                            for(int k2 = 0; k2 < j4; ++k2) {
                                placeLog(reader, random, new BlockPos(k + l2, l1 - k2 - 1, i1 + i3), blockPosSet, boundingBox, featureConfig);
                            }

                        }
                    }
                    //list.add(new FoliagePlacer.Foliage(new BlockPos(j1 + l2, l1, k1 + i3), 0, false));
                }
            }
        }

        return list;*/